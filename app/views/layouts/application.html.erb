<!DOCTYPE html>
<html>
  <head>
    <title>naturEscape</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%# <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true %> 

    <%# Mapbox setup %>
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.8.2/mapbox-gl.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.8.2/mapbox-gl.js"></script>
  </head>

  <body>
    <% unless action_name == "home"%>
      <%= render "shared/navbar" %>
    <% end %>

    <%= render "shared/flashes" %>
    <%= yield %>

    <% unless action_name == "home" %>
      <%= render "shared/footer" %>
    <% end %>


    <%# MAPBOX + SEARCH  %>
    <%# Edits: _search-bar.html.erb | controllers/index.js %>
    <script>
      // To refactor in javascript/plugins/init_mapbox.js
      // + import & call in javascript/application.js
      const fitMapToMarkers = (map, markers) => {
        const bounds = new mapboxgl.LngLatBounds();
          markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));
          map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });
        };

      const initMapbox = () => {
        const mapElement = document.getElementById('map');

        if (mapElement) {
          mapboxgl.accessToken = mapElement.dataset.mapApiKeyValue;
          const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v10'
          });

          // Markers
          const markers = JSON.parse(mapElement.dataset.mapMarkersValue);

          markers.forEach((marker) => {
            const popup = new mapboxgl.Popup().setHTML(marker.info_window)
            const customMarker = document.createElement("div")

            customMarker.className = "marker"
            customMarker.style.backgroundImage = `url('${marker.image_url}')`
            customMarker.style.backgroundSize = "contain"
            customMarker.style.backgroundRepeat = "no-repeat"
            customMarker.style.width = "25px"
            customMarker.style.height = "50px"

            new mapboxgl.Marker(customMarker)
              .setLngLat([ marker.lng, marker.lat ])
              .setPopup(popup)
              .addTo(map);
          });

          fitMapToMarkers(map, markers);

          // Search bar
          const geocoder = new MapboxGeocoder({
              accessToken: mapboxgl.accessToken,
              mapboxgl: map
          });

          document.getElementById('geocoder').appendChild(geocoder.onAdd(map));
        }
      }

      initMapbox();
    </script>
  </body>
</html>
